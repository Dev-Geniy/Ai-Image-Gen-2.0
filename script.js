document.addEventListener("DOMContentLoaded", function () {
    const generateButton = document.getElementById("generate");
    const generateMultipleButton = document.getElementById("generate-multiple");
    const textInput = document.getElementById("text-input");
    const loadingSpinner = document.getElementById("loading-spinner");
    const modal = document.getElementById("modal");
    const generatedImagesContainer = document.getElementById("generated-images-container");
    const closeButton = document.querySelector(".close");

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    function updatePrompt() {
        let promptText = textInput.value.trim();

        // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
        const styleValue = document.getElementById("style-select").value;
        const formatValue = document.getElementById("format-select").value;
        const toneValue = document.getElementById("tone-select").value;
        const themeValue = document.getElementById("theme-select").value;
        const filterValue = document.getElementById("filter-select").value;
        const characterValue = document.getElementById("character-select").value;
        const placeValue = document.getElementById("place-select").value;

        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º—Ç
        const fullPrompt = [promptText, styleValue, formatValue, toneValue, themeValue, filterValue, characterValue, placeValue]
            .filter(item => item) // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
            .join(', '); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
        
        textInput.value = fullPrompt; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
    document.querySelectorAll('select').forEach(select => {
        select.addEventListener("change", updatePrompt);
    });

    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 1 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    generateButton.addEventListener("click", function () {
        generateImage(1);
    });

    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    generateMultipleButton.addEventListener("click", function () {
        generateImage(5);
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeButton.onclick = function () {
        modal.style.display = "none";
        generatedImagesContainer.innerHTML = '';
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.onclick = function (event) {
        if (event.target === modal) {
            modal.style.display = "none";
            generatedImagesContainer.innerHTML = '';
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    function generateImage(count) {
        const description = textInput.value.trim();
        if (!description) {
            alert("ü§∑‚Äç‚ôÇÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚úèÔ∏è");
            return;
        }

        displayLoadingState(true);
        const promises = [];
        for (let i = 0; i < count; i++) {
            const encodedDescription = encodeURIComponent(createDescription(description));
            const imageUrl = `https://image.pollinations.ai/prompt/${encodedDescription}?nologo=1&seed=${generateRandomSeed()}&height=512&width=512`;
            const proxyUrl = "https://corsproxy.io/?";
            const proxiedImageUrl = proxyUrl + encodeURIComponent(imageUrl);

            promises.push(fetch(proxiedImageUrl)
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
                    }
                    return response.blob();
                })
                .then((blob) => URL.createObjectURL(blob))
            );
        }

        Promise.all(promises)
            .then(urls => {
                displayGeneratedImages(urls); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            })
            .catch((error) => {
                alert("ü§∑‚Äç‚ôÇÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
                console.error("–û—à–∏–±–∫–∞:", error);
            })
            .finally(() => {
                displayLoadingState(false);
            });
    }

    function createDescription(inputText) {
        return inputText || "–ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞";
    }

    function generateRandomSeed() {
        return Math.floor(Math.random() * 1e9);
    }

    function displayLoadingState(isLoading) {
        loadingSpinner.style.display = isLoading ? "block" : "none";
        generateButton.disabled = isLoading;
        generateMultipleButton.disabled = isLoading;
        if (isLoading) {
            modal.style.display = "none";
        }
    }

    function displayGeneratedImages(urls) {
        generatedImagesContainer.innerHTML = ''; 
        urls.forEach(url => {
            const img = document.createElement('img');
            img.src = url;
            img.style.width = "100%";
            img.style.borderRadius = "10px";
            img.style.marginBottom = "20px";
            generatedImagesContainer.appendChild(img);
        });
        modal.style.display = "block";
    }
});

// –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ 2.0 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∑–∞–ø—Ä–æ—Å–æ–≤
document.addEventListener('DOMContentLoaded', () => {
    function updateHistoryTable() {
        const history = JSON.parse(localStorage.getItem('history')) || [];
        const tableBody = document.querySelector('#historyTable tbody');
        tableBody.innerHTML = '';
      
        history.forEach(item => {
            const row = document.createElement('tr');
            const cell = document.createElement('td');
            cell.textContent = item;
            cell.style.cursor = 'pointer';

            cell.onclick = () => {
                document.querySelector('#text-input').value = item;
            };

            row.appendChild(cell);
            tableBody.appendChild(row);
        });
    }

    function addToHistory(request) {
        const history = JSON.parse(localStorage.getItem('history')) || [];
        const filteredHistory = history.filter(item => item !== request);
        filteredHistory.push(request);
        localStorage.setItem('history', JSON.stringify(filteredHistory.slice(-5)));
        updateHistoryTable();
    }

    const generateButton = document.querySelector('#generate');
    const generateMultipleButton = document.querySelector('#generate-multiple');

    if (generateButton) {
        generateButton.addEventListener('click', () => {
            const request = document.querySelector('#text-input').value;
            if (request) {
                addToHistory(request);
            } else {
                console.warn('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞.');
            }
        });
    }

    if (generateMultipleButton) {
        generateMultipleButton.addEventListener('click', () => {
            const request = document.querySelector('#text-input').value;
            if (request) {
                for (let i = 0; i < 5; i++) {
                    addToHistory(`${request} - –ó–∞–ø—Ä–æ—Å ${i + 1}`);
                }
            } else {
                console.warn('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞');
            }
        });
    }

    updateHistoryTable();
});

const textInput = document.getElementById('text-input');
const clearTextButton = document.getElementById('clear-text');

textInput.addEventListener('input', () => {
    clearTextButton.style.display = textInput.value ? 'block' : 'none';
});

// –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
clearTextButton.style.display = textInput.value ? 'block' : 'none';

clearTextButton.addEventListener('click', () => {
    textInput.value = '';
    clearTextButton.style.display = 'none';
});

// –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
document.addEventListener("DOMContentLoaded", function() {
    const titleElement = document.querySelector('.animated-title');
    const titleText = titleElement.textContent;
    
    titleElement.textContent = '';

    titleText.split('').forEach((letter, index) => {
        const span = document.createElement('span');
        span.textContent = letter === ' ' ? '\u00A0' : letter;
        span.style.animationDelay = `${index * 0.2}s`; // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã
        span.classList.add('fade-in-letter');
        titleElement.appendChild(span);
    });
});

function saveBackgroundUrl(url) {
    localStorage.setItem('backgroundImage', url);
}

document.addEventListener("DOMContentLoaded", function () {
    const savedBackground = localStorage.getItem('backgroundImage');
    if (savedBackground) {
        setBodyBackground(savedBackground);
    }
});

function setBodyBackground(url) {
    const style = document.createElement('style');
    style.innerHTML = `
        body::before {
            background-image: url(${url});
            background-size: cover;
            background-position: center;
        }
    `;
    document.head.appendChild(style);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ–Ω–∞ —á–µ—Ä–µ–∑ Imgbb API
document.getElementById('background-upload').addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (file) {
        const formData = new FormData();
        formData.append('image', file);

        uploadToImgbb(formData);
    }
});

function uploadToImgbb(formData) {
    const apiKey = '776322487f852a2b3752cd6e0a88e7ad';
    fetch('https://api.imgbb.com/1/upload?key=' + apiKey, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const imageUrl = data.data.url;
            alert('AiImage: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚ú®üéâ‚ú® –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ' + imageUrl);
            saveBackgroundUrl(imageUrl); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ–Ω
            setBodyBackground(imageUrl); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω
        } else {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ' + data.error.message);
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('AiImage: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!');
    });
}

document.getElementById('remove-background').addEventListener('click', function() {

    localStorage.removeItem('backgroundImage');
    
    const style = document.createElement('style');
    style.innerHTML = `
        body::before {
            background-image: url('https://img.freepik.com/premium-photo/blue-wash-day-japanese-village_1282444-172329.jpg?w=360');
            background-size: cover;
            background-position: center;
        }
    `;
    document.head.appendChild(style);

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    alert('AiImage: –§–æ–Ω üóë —É–¥–∞–ª—ë–Ω. –í–æ–∑–≤—Ä–∞—â—ë–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ–Ω —Å–∞–π—Ç–∞!');
});

document.addEventListener('DOMContentLoaded', function() {
    const scrollIndicator = document.createElement('div');
    scrollIndicator.classList.add('scroll-indicator');
    document.body.appendChild(scrollIndicator);

    let timeout = null;

    window.addEventListener('scroll', function() {
        const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPosition = window.scrollY / scrollHeight;

        scrollIndicator.style.height = `${scrollPosition * 100}%`;

        scrollIndicator.classList.add('active');

        clearTimeout(timeout);
        timeout = setTimeout(() => {
            scrollIndicator.classList.remove('active');
        }, 500);
    });
});

// –ö–ê–†–¢–û–ß–ö–ò –ü–†–û–ö–†–£–¢–ö–ê = = = = = =
const appPanel = document.querySelector('.app-panel');
let isDragging = false;
let startX;
let scrollLeft;

appPanel.addEventListener('mousedown', (e) => {
    isDragging = true;
    startX = e.pageX - appPanel.offsetLeft;
    scrollLeft = appPanel.scrollLeft;
    appPanel.style.cursor = 'grabbing';
});

appPanel.addEventListener('mouseleave', () => {
    isDragging = false;
    appPanel.style.cursor = 'grab';
});

appPanel.addEventListener('mouseup', () => {
    isDragging = false;
    appPanel.style.cursor = 'grab';
});

appPanel.addEventListener('mousemove', (e) => {
    if (!isDragging) return;
    e.preventDefault();
  
    const x = e.pageX - appPanel.offsetLeft;
    const walk = (x - startX) * 1;
    appPanel.scrollLeft = scrollLeft - walk;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
appPanel.addEventListener('touchstart', (e) => {
    isDragging = true;
    startX = e.touches[0].pageX - appPanel.offsetLeft;
    scrollLeft = appPanel.scrollLeft;
});

appPanel.addEventListener('touchmove', (e) => {
    if (!isDragging) return;

    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const x = e.touches[0].pageX - appPanel.offsetLeft;
    const walk = (x - startX) * 1;
    appPanel.scrollLeft = scrollLeft - walk;
});

// –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è touchend
appPanel.addEventListener('touchend', (e) => {
    isDragging = false;

    // –ï—Å–ª–∏ –±—ã–ª —Å–≤–∞–π–ø, —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (Math.abs(e.changedTouches[0].pageX - startX) < 30) {
        e.stopPropagation();
    }
});


document.addEventListener("DOMContentLoaded", function () {
    const donationButton = document.querySelector(".donation-button");

    if (donationButton) {
        donationButton.addEventListener("click", function () {
            alert("AiImage: –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!");
        });
    }
});

// –ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
function setupInfiniteScroll(appPanel) {
    const cardCount = appPanel.children.length;

    appPanel.addEventListener('scroll', () => {
        const scrollPosition = appPanel.scrollLeft;
        const panelWidth = appPanel.scrollWidth - appPanel.clientWidth;

        // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞, –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É
        if (scrollPosition >= panelWidth) {
            appPanel.scrollLeft = 0; // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
setupInfiniteScroll(appPanel);


// –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
window.alert = function (message) {
    Swal.fire({
        title: message,
        background: '#0f0f3d', // –¢—ë–º–Ω–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω –¥–ª—è –∫–∏–±–µ—Ä–ø–∞–Ω–∫ —Å—Ç–∏–ª—è
        color: '#00ffcc',      // –ù–µ–æ–Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        confirmButtonColor: '#ff00ff', // –ù–µ–æ–Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        buttonsStyling: false, 
        customClass: {
            popup: 'cyberpunk-popup',
            confirmButton: 'cyberpunk-button'
        }
    });
};

// –°–û–í–ï–¢–ò –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï =======================
const tips = [
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–Ω—ã–µ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.",
    "–î–æ–±–∞–≤—å—Ç–µ —Ü–≤–µ—Ç–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
    "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å—Ç–∏–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è–º–∏.",
    "–û–ø–∏—à–∏—Ç–µ —Å–≤–µ—Ç –∏ —Ç–µ–Ω–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.",
    "–î–æ–±–∞–≤—å—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.",
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–æ–±—ã—á–Ω—ã–µ —Ä–∞–∫—É—Ä—Å—ã.",
    "–£—Ç–æ—á–Ω–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.",
    "–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –ª–µ—Å, –≥–æ—Ä—ã –∏–ª–∏ –º–æ—Ä–µ.",
    "–ó–∞–¥–∞–π—Ç–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã —Å—Ü–µ–Ω—ã.",
    "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –º–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è.",
    "–£–∫–∞–∂–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–µ—Ä–µ–≤–æ, –º–µ—Ç–∞–ª–ª –∏–ª–∏ —Ç–∫–∞–Ω—å.",
    "–î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫—É–ª—å—Ç—É—Ä–æ–π –∏–ª–∏ —ç–ø–æ—Ö–æ–π.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ç–∫–∏–µ –ª–∏–Ω–∏–∏ –∏ —Ñ–æ—Ä–º—ã –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è.",
    "–î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–≤–∏–∂–µ–Ω–∏—è –¥–ª—è –±–æ–ª—å—à–µ–π –¥–∏–Ω–∞–º–∏–∫–∏.",
    "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –∫—Ä—É–ø–Ω—ã–º –∏ –¥–∞–ª—å–Ω–∏–º –ø–ª–∞–Ω–æ–º.",
    "–£—Ç–æ—á–Ω–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü –∏ –ø–æ–∑—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.",
    "–û–ø–∏—à–∏—Ç–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ç—É–º–∞–Ω –∏–ª–∏ –¥–æ–∂–¥—å.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–æ–±—ã—á–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ —Ç–µ–∫—Å—Ç—É—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–ª–∞–¥–∫–∏–µ, —à–µ—Ä–æ—Ö–æ–≤–∞—Ç—ã–µ –∏–ª–∏ –±–ª–µ—Å—Ç—è—â–∏–µ.",
    "–î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å—Ç–∏–ª—å —Å—Ü–µ–Ω—ã.",
    "–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.",
    "–î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥—Ä–∞–∫–æ–Ω—ã –∏–ª–∏ –º–∞–≥–∏—è.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –∂–∏–≤–æ—Å—Ç–∏.",
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã –∏ –∫—É–ª—å—Ç—É—Ä—ã.",
    "–î–æ–±–∞–≤—å—Ç–µ —Ü–≤–µ—Ç–Ω—ã–µ —Ç–µ–Ω–∏ –¥–ª—è –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–ª–∏ —Å—Ü–µ–Ω—ã.",
    "–£—Ç–æ—á–Ω—è–π—Ç–µ –≥–µ–æ–º–µ—Ç—Ä–∏—é –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤.",
    "–î–æ–±–∞–≤—å—Ç–µ –¥–µ—Ç–∞–ª–∏, –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ —Å—Ü–µ–Ω–∞ –∏–∑ —Ñ–∏–ª—å–º–∞.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏—Ä–æ–¥—ã –¥–ª—è –æ–∂–∏–≤–ª–µ–Ω–∏—è —Å—Ü–µ–Ω—ã.",
    "–û–ø–∏—à–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.",
    "–î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—Ä–µ–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–¥–∞–Ω–∏—è –∏ —É–ª–∏—Ü—ã.",
    "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º –∏ —Ä–µ—Ç—Ä–æ-—Å—Ç–∏–ª–µ–º.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–±–ª–∞–∫–æ–≤ –∏–ª–∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.",
    "–î–æ–±–∞–≤—å—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–º–∫–∏ –∏–ª–∏ —Å—Ç–∞—Ä–∏–Ω–Ω—É—é –º–µ–±–µ–ª—å.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∫–∞–∫ –≥–µ—Ä–æ–µ–≤ –∏–ª–∏ –∞–Ω—Ç–∏–≥–µ—Ä–æ–µ–≤.",
    "–î–æ–±–∞–≤—å—Ç–µ —Å–≤–µ—Ç–æ–≤—ã–µ –±–ª–∏–∫–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –æ–±—ä–µ–º–∞.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—è.",
    "–û–ø–∏—à–∏—Ç–µ —Å–∏–ª—É—ç—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.",
    "–î–æ–±–∞–≤—å—Ç–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ä–æ–±–æ—Ç—ã –∏–ª–∏ –¥—Ä–æ–Ω—ã.",
    "–û–ø–∏—à–∏—Ç–µ –∑–≤—É–∫–∏, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ –º—è–≥–∫–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –≤ —Ü–≤–µ—Ç–∞—Ö.",
    "–î–æ–±–∞–≤—å—Ç–µ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–∞–∫ –∑–≤–µ–∑–¥—ã –∏–ª–∏ –ø–ª–∞–Ω–µ—Ç—ã.",
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ü–≤–µ—Ç–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–≤–µ–∂–µ—Å—Ç–∏.",
    "–û–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ–π –º–∏–º–∏–∫–æ–π.",
    "–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–∞–∫ –ª–∏—Å—Ç—å—è –∏–ª–∏ –∫–∞–º–Ω–∏.",
    "–£—Ç–æ—á–Ω—è–π—Ç–µ –º–µ—Å—Ç–æ —Å—ä–µ–º–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ—Ä—ã –∏–ª–∏ –ø–ª—è–∂.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–æ–±—ã—á–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤.",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ Ai, –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."
];

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–≤–µ—Ç–æ–≤
const loadingTipElement = document.getElementById("loading-tip");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞
function getRandomTip() {
    return tips[Math.floor(Math.random() * tips.length)];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞
function updateLoadingTip() {
    loadingTipElement.textContent = getRandomTip();
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–≤–µ—Ç
function showLoadingScreen() {
    document.getElementById("loading-spinner").style.display = "block";
    updateLoadingTip();  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–≤–µ—Ç –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ showLoadingScreen, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "Generate"
document.getElementById("generate").addEventListener("click", showLoadingScreen);
document.getElementById("generate-multiple").addEventListener("click", showLoadingScreen);
